name: Install Dependencies
description: Install dependencies
inputs:
    destination:
        description: Location to check out rust-lightning and ldk-c-bindings repositories
        default: '.'
        required: true
    configureRustNightly:
        description: Flag whether or not to install rust, which is not necessary on Ubuntu machines
        default: 'true'
        required: false
runs:
    using: composite
    steps:
        -   name: Install Homebrew Dependencies
            shell: bash
            if: ${{ runner.os == 'macOS' }}
            run: |
                brew install gnu-sed
        -   name: Checkout Rust-Lightning and LDK-C-Bindings git
            shell: bash
            run: |
                echo `pwd`
                mkdir -p ${{ inputs.destination }}/bin
                git clone --branch 2023-04-0.0.115-java-bindings https://github.com/TheBlueMatt/rust-lightning ${{ inputs.destination }}/rust-lightning
                git clone --branch debugging-01 https://github.com/arik-so/ldk-c-bindings ${{ inputs.destination }}/ldk-c-bindings
        -   name: Install Rust, required targets
            if: ${{ inputs.configureRustNightly == 'true' }}
            shell: bash
            run: |
                rustup toolchain install nightly-2022-05-13
                rustup target add aarch64-apple-darwin aarch64-apple-ios x86_64-apple-ios
                rustup component add rust-src --toolchain nightly-2022-05-13-x86_64-apple-darwin
        -   name: Load Cache
            if: ${{ inputs.configureRustNightly == 'true' }}
            uses: actions/cache@v3
            with:
                path: |
                    ~/.cargo/bin/
                    ~/.cargo/registry/index/
                    ~/.cargo/registry/cache/
                    ~/.cargo/git/db/
                    target/
                key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        -   name: Generate C Bindings
            shell: bash
            run: |
                export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
                pushd ${{ inputs.destination }}/ldk-c-bindings
                ./genbindings.sh ../rust-lightning true
                popd
        -   name: Install Swift Formatter
            shell: bash
            run: |
                git clone https://github.com/apple/swift-format.git
                cd swift-format
                git checkout "tags/$VERSION"
                swift build -c release
            env:
                VERSION: 508.0.1
        -   name: Generate Swift Bindings
            shell: bash
            run: |
                npm install
                # python3 ./
                npm run tsc
                node ./src/index.mjs
            env:
                LDK_SWIFT_GENERATOR_INPUT_HEADER_PATH: ${{ inputs.destination }}/ldk-c-bindings/lightning-c-bindings/include/lightning.h
                SWIFT_FORMAT_PATH: ${{ github.workspace }}/swift-format/.build/release/swift-format
